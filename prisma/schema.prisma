// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model VerificationCode {
  id Int @id @default(autoincrement())
  email String
  verificationCode String
  expiresAt DateTime
  isUsed Boolean @default(false)
  createAt DateTime @default(now())
}

model User {
  id             Int      @id @default(autoincrement())
  userId         String   @unique @default(uuid()) 
  email          String?  @unique
  name           String?
  oauthProvider  String?  
  oauthId        String?  @unique 
  createdAt      DateTime @default(now())
  chats         Chat[]    
}

model Chat {
  id        String    @id @default(uuid())  
  title     String?   
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  
  userId    Int       
  user      User      @relation(fields: [userId], references: [id])
  messages  Message[] 

  @@index([userId])
}

model Message {
  id        String   @id @default(uuid())
  content   String   @db.Text    
  role      String   
  createdAt DateTime @default(now())
  
  chatId    String  
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)

  @@index([chatId])
}